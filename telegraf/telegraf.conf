#------------------------------------------------------------------------------
# Copyright 2019 Robert Cowart
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#------------------------------------------------------------------------------

[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  collection_jitter = "0s"

  metric_batch_size = 1000
  metric_buffer_limit = 10000

  flush_interval = "9s"
  flush_jitter = "2s"

  precision = "50ms"

  ## Logging configuration:
  debug = false
  quiet = false
  logfile = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  omit_hostname = false

#!!!!!!!!!! MODIFY AS NEEDED TO CONNECT TO YOUR ELASTICSEARCH CLUSTER !!!!!!!!!!
[[inputs.elasticsearch]]
  servers = ["http://elastic:changeme@127.0.0.1:9200"]
  http_timeout = "5s"

  local = true
  cluster_health = true
  cluster_health_level = "indices"
  cluster_stats = true

  indices_include = ["_all"]
  indices_level = "shards"

  ## node_stats is a list of sub-stats that you want to have gathered. Valid options
  ## are "indices", "os", "process", "jvm", "thread_pool", "fs", "transport", "http",
  ## "breaker". Per default, all stats are gathered.
  # node_stats = ["jvm", "http"]

  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  # insecure_skip_verify = false

[[inputs.cpu]]
  # Whether to report per-cpu stats or not
  percpu = true
  # Whether to report total system cpu stats or not
  totalcpu = true
  # If true, collect raw CPU time metrics.
  collect_cpu_time = false
  # If true, compute and report the sum of all non-idle CPU states.
  report_active = false

[[inputs.disk]]
  # By default stats will be gathered for all mount points. Set mount_points will restrict the stats to only the
  # specified mount points.
  #mount_points = ["/"]

  # Ignore mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs", "shm", "/dev/loop*"]

  [inputs.disk.tagdrop]
    path = [ "/run/docker/runtime-runc/moby/*" ]

[[inputs.diskio]]
  # By default, telegraf will gather stats for all devices including disk partitions. Setting devices will restrict the
  # stats to the specified devices.
  #devices = ["sda", "sdb", "vd*"]
  
  # Uncomment the following line if you need disk serial numbers.
  #skip_serial_number = false

  # On systems which support it, device metadata can be added in the form of tags. Currently only Linux is supported
  # via udev properties. You can view available properties for a device by running:
  # 'udevadm info -q property -n /dev/sda'
  #device_tags = ["ID_FS_TYPE", "ID_FS_USAGE"]

  # Using the same metadata source as device_tags, you can also customize the name of the device via templates. The
  # 'name_templates' parameter is a list of templates to try and apply to the device. The template may contain
  # variables in the form of '$PROPERTY' or '${PROPERTY}'. The first template which does not contain any variables not
  # present for the device is used as the device name tag. The typical use case is for LVM volumes, to get the VG/LV
  # name instead of the near-meaningless DM-0 name.
  #name_templates = ["$ID_FS_LABEL","$DM_VG_NAME/$DM_LV_NAME"]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.net]]
  # By default, telegraf gathers stats from any up interface (excluding loopback). Setting interfaces will tell it to
  # gather these explicit interfaces, regardless of status.
  #interfaces = ["eth0"]
  
  # On linux systems telegraf also collects protocol stats. Setting ignore_protocol_stats to true will skip reporting
  # of protocol metrics.
  #ignore_protocol_stats = false

  [inputs.net.tagdrop]
    interface = [ "veth*" ]

[[inputs.processes]]

[[inputs.sensors]]
  # Remove numbers from field names. If true, a field name like 'temp1_input' will be changed to 'temp_input'.
  #remove_numbers = true

  # Timeout is the maximum amount of time that the sensors command can run.
  #timeout = "5s"

[[inputs.smart]]
  # Optionally specify the path to the smartctl executable.
  #path = "/usr/bin/smartctl"

  # On most platforms smartctl requires root access. Setting 'use_sudo' to true will make use of sudo to run smartctl.
  # Sudo must be configured to to allow the telegraf user to run smartctl with out password.
  #use_sudo = false

  # Skip checking disks in this power mode. Defaults to "standby" to not wake up disks that have stoped rotating. See
  # --nocheck in the man pages for smartctl. smartctl version 5.41 and 5.42 have faulty detection of power mode and
  # might require changing this value to "never" depending on your disks.
  #nocheck = "standby"

  # Gather detailed metrics for each SMART Attribute. Defaults to "false".
  #attributes = false

  # Optionally specify devices to exclude from reporting.
  excludes = [ "#" ]

  # Optionally specify devices and device type. If unset, a scan (smartctl --scan) for S.M.A.R.T. devices will be done
  # and all found will be included except for the excluded in excludes.
  #devices = [ "" ]

  tagexclude = [ "model" ]

[[inputs.swap]]

[[inputs.system]]

[[processors.converter]]
  namepass = ["smart_device"]

  [processors.converter.tags]
    integer = [ "capacity" ]
    string = [ "enabled" ]

[[processors.strings]]
  [[processors.strings.lowercase]]
    tag = "host"

#!!!!!!!!!! MODIFY AS NEEDED TO CONNECT TO YOUR INFLUXDB SERVER !!!!!!!!!!
[[outputs.influxdb]]
  urls = ["http://192.0.2.11:8086"]

  database = "telegraf"

  skip_database_creation = false

  #retention_policy = ""

  #write_consistency = "any"

  timeout = "3s"

  #username = "username"
  #password = "password"

  user_agent = "telegraf"

  #tls_ca = "$WRITER_TLS_CA"
  #tls_cert = "$WRITER_TLS_CERT"
  #tls_key = "$WRITER_TLS_KEY"
  #insecure_skip_verify = "$WRITER_INSECURE_SKIP_VERIFY"

  # HTTP Proxy override, if unset the standard proxy environment variables are consulted to determine which proxy, if any, should be used.
  #http_proxy = "http://corporate.proxy:3128"

  # Additional HTTP headers
  #http_headers = {"X-Special-Header" = "Special-Value"}

  content_encoding = "identity"

  influx_uint_support = false
